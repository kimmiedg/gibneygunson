current directory: /Users/kimmie/Documents/work/practice/gibneygunson/vendor/bundle/ruby/2.7.0/gems/nio4r-2.6.1/ext/nio4r
/Users/kimmie/.rbenv/versions/2.7.0/bin/ruby -I /Users/kimmie/.rbenv/versions/2.7.0/lib/ruby/2.7.0 -r ./siteconf20231127-40108-zik386.rb extconf.rb
checking for unistd.h... yes
checking for rb_io_descriptor()... no
checking for linux/aio_abi.h... no
checking for linux/io_uring.h... no
checking for sys/select.h... yes
checking for port_event_t in poll.h... no
checking for sys/epoll.h... no
checking for sys/event.h... yes
checking for sys/queue.h... yes
checking for port_event_t in port.h... no
checking for sys/resource.h... yes
creating Makefile

current directory: /Users/kimmie/Documents/work/practice/gibneygunson/vendor/bundle/ruby/2.7.0/gems/nio4r-2.6.1/ext/nio4r
make "DESTDIR=" clean

current directory: /Users/kimmie/Documents/work/practice/gibneygunson/vendor/bundle/ruby/2.7.0/gems/nio4r-2.6.1/ext/nio4r
make "DESTDIR="
compiling bytebuffer.c
compiling monitor.c
monitor.c:101:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:101:25: note: '{' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:101:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:101:25: note: ')' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:103:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:103:32: note: '{' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:103:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:103:32: note: ')' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:105:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:105:32: note: '{' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:105:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:105:32: note: ')' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:108:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:108:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:108:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:108:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:108:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:108:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:114:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:114:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:114:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:114:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:115:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:115:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:115:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:115:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:116:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:116:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:116:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:116:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:141:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:141:34: note: '{' token is here
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:141:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:141:34: note: ')' token is here
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:150:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:150:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:150:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:150:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:154:80: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:154:80: note: '{' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:154:80: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:154:80: note: ')' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:154:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:154:34: note: '{' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:154:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:154:34: note: ')' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:171:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:171:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:171:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:171:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:176:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:176:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:176:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:176:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:187:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:187:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:187:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:187:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:198:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:198:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:198:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:198:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:209:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:209:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:209:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:209:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:214:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:214:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:214:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:214:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:219:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:219:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:219:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:219:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:224:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:224:30: note: '{' token is here
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:224:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:224:30: note: ')' token is here
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:233:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:233:23: note: '{' token is here
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:233:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:233:23: note: ')' token is here
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:235:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:235:23: note: '{' token is here
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:235:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:235:23: note: ')' token is here
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:237:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:237:23: note: '{' token is here
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:237:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:237:23: note: ')' token is here
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:274:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:274:25: note: '{' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:274:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:274:25: note: ')' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:276:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:276:32: note: '{' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:276:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:276:32: note: ')' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:278:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:278:32: note: '{' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:278:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:278:32: note: ')' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:281:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:281:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:281:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:281:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:281:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:281:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:298:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:298:32: note: '{' token is here
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:298:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:298:32: note: ')' token is here
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:301:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:301:32: note: '{' token is here
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:301:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:301:32: note: ')' token is here
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:304:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:304:32: note: '{' token is here
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:304:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:304:32: note: ')' token is here
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:310:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:310:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:310:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:310:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:312:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:312:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:312:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:312:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
70 warnings generated.
compiling nio4r_ext.c
In file included from nio4r_ext.c:6:
./../libev/ev.c:573:48: warning: '/*' within block comment [-Wcomment]
/*#define MIN_INTERVAL  0.00000095367431640625 /* 1/2**20, good till 2200 */
                                               ^
./../libev/ev.c:1192:26: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long long') to 'unsigned int' [-Wshorten-64-to-32]
  return ecb_popcount32 (x) + ecb_popcount32 (x >> 32);
         ~~~~~~~~~~~~~~~~^~
./../libev/ev.c:1054:49: note: expanded from macro 'ecb_popcount32'
  #define ecb_popcount32(x) __builtin_popcount (x)
                            ~~~~~~~~~~~~~~~~~~  ^
./../libev/ev.c:1510:13: warning: comparison of integers of different signs: 'unsigned int' and 'int' [-Wsign-compare]
      if (e < (14 - 24)) /* might not be sharp, but is good enough */
          ~ ^  ~~~~~~~
./../libev/ev.c:2136:31: warning: 'extern' variable has an initializer [-Wextern-initializer]
  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a definition despite extern */
                              ^
./../libev/ev.c:2227:7: warning: implicit conversion loses integer precision: 'long' to '__darwin_suseconds_t' (aka 'int') [-Wshorten-64-to-32]
      EV_TV_SET (tv, delay);
      ^~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:591:65: note: expanded from macro 'EV_TV_SET'
# define EV_TV_SET(tv,t) do { tv.tv_sec = (long)t; tv.tv_usec = (long)((t - tv.tv_sec) * 1e6); } while (0)
                                                              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:2249:19: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
  if (elem * ncur > MALLOC_ROUND - sizeof (void *) * 4)
      ~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:2619:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      k = minpos - heap;
        ~ ~~~~~~~^~~~~~
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3080:
./../libev/ev_kqueue.c:116:34: warning: implicit conversion loses integer precision: 'uintptr_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
      int fd = kqueue_events [i].ident;
          ~~   ~~~~~~~~~~~~~~~~~~^~~~~
./../libev/ev_kqueue.c:120:39: warning: implicit conversion loses integer precision: 'intptr_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
          int err = kqueue_events [i].data;
              ~~~   ~~~~~~~~~~~~~~~~~~^~~~
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3095:
./../libev/ev_select.c:109:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'fd_mask' (aka 'int') [-Wshorten-64-to-32]
    fd_mask mask = 1UL << (fd % NFDBITS);
            ~~~~   ~~~~^~~~~~~~~~~~~~~~~
./../libev/ev_select.c:147:3: warning: implicit conversion loses integer precision: 'long' to '__darwin_suseconds_t' (aka 'int') [-Wshorten-64-to-32]
  EV_TV_SET (tv, timeout);
  ^~~~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:591:65: note: expanded from macro 'EV_TV_SET'
# define EV_TV_SET(tv,t) do { tv.tv_sec = (long)t; tv.tv_usec = (long)((t - tv.tv_sec) * 1e6); } while (0)
                                                              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3095:
./../libev/ev_select.c:259:34: warning: implicit conversion loses integer precision: 'unsigned long' to 'fd_mask' (aka 'int') [-Wshorten-64-to-32]
              fd_mask mask = 1UL << bit;
                      ~~~~   ~~~~^~~~~~
In file included from nio4r_ext.c:6:
./../libev/ev.c:4417:34: warning: '&' within '|' [-Wbitwise-op-parentheses]
  fd_change (EV_A_ fd, w->events & EV__IOFDSET | EV_ANFD_REIFY);
                       ~~~~~~~~~~^~~~~~~~~~~~~ ~
./../libev/ev.c:4417:34: note: place parentheses around the '&' expression to silence this warning
  fd_change (EV_A_ fd, w->events & EV__IOFDSET | EV_ANFD_REIFY);
                                 ^
                       (                      )
13 warnings generated.
compiling selector.c
selector.c:167:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:214:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:219:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:219:27: note: '{' token is here
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:219:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:219:27: note: ')' token is here
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:221:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:221:34: note: '{' token is here
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:221:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:221:34: note: ')' token is here
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:223:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:223:34: note: '{' token is here
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:223:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:223:34: note: ')' token is here
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:225:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:225:34: note: '{' token is here
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:225:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:225:34: note: ')' token is here
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:227:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:227:34: note: '{' token is here
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:227:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:227:34: note: ')' token is here
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:229:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:229:34: note: '{' token is here
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:229:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:229:34: note: ')' token is here
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:231:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:231:34: note: '{' token is here
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:231:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:231:34: note: ')' token is here
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:234:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:248:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:248:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:248:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:248:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:249:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:249:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:249:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:249:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:251:65: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:251:65: note: '{' token is here
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:251:65: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:251:65: note: ')' token is here
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:252:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:252:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:252:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:252:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:253:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:253:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:253:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:253:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:269:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:269:27: note: '{' token is here
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:269:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:269:27: note: ')' token is here
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: note: '{' token is here
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: note: ')' token is here
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: note: '{' token is here
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: note: ')' token is here
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: note: '{' token is here
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: note: ')' token is here
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: note: '{' token is here
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: note: ')' token is here
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: note: '{' token is here
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: note: ')' token is here
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: note: '{' token is here
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: note: ')' token is here
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: note: '{' token is here
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: note: ')' token is here
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:293:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:293:37: note: '{' token is here
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:293:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:293:37: note: ')' token is here
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:296:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:296:34: note: '{' token is here
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:296:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:296:34: note: ')' token is here
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:297:26: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:297:26: note: '{' token is here
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:297:26: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:297:26: note: ')' token is here
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:298:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:298:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:298:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:298:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:313:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:313:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:313:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:313:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:315:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:315:30: note: '{' token is here
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:315:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:315:30: note: ')' token is here
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:316:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:316:22: note: '{' token is here
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:316:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:316:22: note: ')' token is here
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:345:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:345:37: note: '{' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:345:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:345:37: note: ')' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:357:51: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:357:51: note: '{' token is here
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:357:51: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:357:51: note: ')' token is here
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:378:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:378:37: note: '{' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:378:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:378:37: note: ')' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:382:29: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:382:29: note: '{' token is here
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:382:29: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:382:29: note: ')' token is here
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:391:43: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:391:43: note: '{' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:391:43: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:391:43: note: ')' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:394:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:394:36: note: '{' token is here
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:394:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:394:36: note: ')' token is here
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:540:43: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:540:43: note: '{' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:540:43: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:540:43: note: ')' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:542:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:542:36: note: '{' token is here
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:542:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:542:36: note: ')' token is here
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/kimmie/.rbenv/versions/2.7.0/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
96 warnings generated.
linking shared-object nio4r_ext.bundle
ld: warning: -undefined dynamic_lookup may not work with chained fixups

current directory: /Users/kimmie/Documents/work/practice/gibneygunson/vendor/bundle/ruby/2.7.0/gems/nio4r-2.6.1/ext/nio4r
make "DESTDIR=" install
/usr/bin/install -c -m 0755 nio4r_ext.bundle ./.gem.20231127-40108-1y7a1p6
